version: '3.8'

services:
  django_app:
    build:
      context: .
    container_name: django_app
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  db:
    image: postgres:16-alpine
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:6
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 5s

  celery_worker:
    build:
      context: .
    container_name: celery_worker
    command: celery -A config worker --loglevel=info
    depends_on:
      - db
      - redis
    env_file:
      - .env

  celery_beat:
    build:
      context: .
    container_name: celery_beat
    command: celery -A config beat --loglevel=info
    depends_on:
      - db
      - redis
    env_file:
      - .env

volumes:
  pg_data:
